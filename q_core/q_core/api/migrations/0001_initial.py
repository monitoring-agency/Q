# Generated by Django 4.0.2 on 2022-02-17 22:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ACLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('allow', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('cmd', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('mail', models.EmailField(blank=True, default='', max_length=255, null=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('linked_contacts', models.ManyToManyField(blank=True, to='api.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=16, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DayTimePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.day')),
            ],
        ),
        migrations.CreateModel(
            name='GlobalVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('disabled', models.BooleanField(blank=True, default=False, null=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, default='', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(default='', max_length=4, validators=[django.core.validators.RegexValidator('(([01][0-9]|2[0-3])[0-5][0-9]|2400)')])),
                ('stop_time', models.CharField(default='', max_length=4, validators=[django.core.validators.RegexValidator('(([01][0-9]|2[0-3])[0-5][0-9]|2400)')])),
            ],
        ),
        migrations.CreateModel(
            name='Proxy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('address', models.CharField(default='', max_length=255)),
                ('port', models.PositiveIntegerField(default=8443)),
                ('secret', models.CharField(default='', max_length=255)),
                ('web_secret', models.CharField(default='', max_length=255)),
                ('web_address', models.CharField(default='', max_length=255)),
                ('web_port', models.PositiveIntegerField(default=4443)),
                ('disabled', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchedulingInterval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.PositiveIntegerField(default=350)),
            ],
        ),
        migrations.CreateModel(
            name='TimePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('time_periods', models.ManyToManyField(to='api.DayTimePeriod')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField(default=1)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ObservableTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('linked_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.check')),
                ('linked_contact_groups', models.ManyToManyField(blank=True, to='api.ContactGroup')),
                ('linked_contacts', models.ManyToManyField(blank=True, to='api.Contact')),
                ('notification_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_ot', to='api.timeperiod')),
                ('observable_templates', models.ManyToManyField(blank=True, to='api.OrderedListItem')),
                ('scheduling_interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.schedulinginterval')),
                ('scheduling_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduling_ot', to='api.timeperiod')),
            ],
        ),
        migrations.CreateModel(
            name='Observable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('disabled', models.BooleanField(blank=True, default=False, null=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('linked_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.check')),
                ('linked_contact_groups', models.ManyToManyField(blank=True, to='api.ContactGroup')),
                ('linked_contacts', models.ManyToManyField(blank=True, to='api.Contact')),
                ('linked_host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.host')),
                ('linked_proxy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.proxy')),
                ('notification_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification', to='api.timeperiod')),
                ('observable_templates', models.ManyToManyField(blank=True, to='api.OrderedListItem')),
                ('scheduling_interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.schedulinginterval')),
                ('scheduling_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduling', to='api.timeperiod')),
            ],
        ),
        migrations.CreateModel(
            name='HostTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('address', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('comment', models.CharField(blank=True, default='', max_length=1024, null=True)),
                ('host_templates', models.ManyToManyField(blank=True, to='api.OrderedListItem')),
                ('linked_check', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.check')),
                ('linked_contact_groups', models.ManyToManyField(blank=True, to='api.ContactGroup')),
                ('linked_contacts', models.ManyToManyField(blank=True, to='api.Contact')),
                ('notification_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_ht', to='api.timeperiod')),
                ('scheduling_interval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.schedulinginterval')),
                ('scheduling_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduling_ht', to='api.timeperiod')),
            ],
        ),
        migrations.AddField(
            model_name='host',
            name='host_templates',
            field=models.ManyToManyField(blank=True, to='api.OrderedListItem'),
        ),
        migrations.AddField(
            model_name='host',
            name='linked_check',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.check'),
        ),
        migrations.AddField(
            model_name='host',
            name='linked_contact_groups',
            field=models.ManyToManyField(blank=True, to='api.ContactGroup'),
        ),
        migrations.AddField(
            model_name='host',
            name='linked_contacts',
            field=models.ManyToManyField(blank=True, to='api.Contact'),
        ),
        migrations.AddField(
            model_name='host',
            name='linked_proxy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.proxy'),
        ),
        migrations.AddField(
            model_name='host',
            name='notification_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_h', to='api.timeperiod'),
        ),
        migrations.AddField(
            model_name='host',
            name='scheduling_interval',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.schedulinginterval'),
        ),
        migrations.AddField(
            model_name='host',
            name='scheduling_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scheduling_h', to='api.timeperiod'),
        ),
        migrations.CreateModel(
            name='GenericKVP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key', to='api.label')),
                ('value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value', to='api.label')),
            ],
        ),
        migrations.AddField(
            model_name='daytimeperiod',
            name='periods',
            field=models.ManyToManyField(to='api.Period'),
        ),
        migrations.AddField(
            model_name='contact',
            name='linked_host_notification_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_host_nt', to='api.timeperiod'),
        ),
        migrations.AddField(
            model_name='contact',
            name='linked_host_notifications',
            field=models.ManyToManyField(blank=True, related_name='contact_host_check', to='api.Check'),
        ),
        migrations.AddField(
            model_name='contact',
            name='linked_metric_notification_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='contact_metric_nt', to='api.timeperiod'),
        ),
        migrations.AddField(
            model_name='contact',
            name='linked_metric_notifications',
            field=models.ManyToManyField(blank=True, related_name='contact_metric_check', to='api.Check'),
        ),
        migrations.CreateModel(
            name='ACLGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255, unique=True)),
                ('linked_acls', models.ManyToManyField(to='api.ACLModel')),
            ],
        ),
        migrations.CreateModel(
            name='AccountModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('linked_acl_group', models.ForeignKey(default=2, on_delete=django.db.models.deletion.DO_NOTHING, to='api.aclgroupmodel')),
                ('notification_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='notification_acc', to='api.timeperiod')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement', models.CharField(default='', max_length=255, unique=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
    ]
